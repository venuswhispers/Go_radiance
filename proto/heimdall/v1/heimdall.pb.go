// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: proto/heimdall/v1/heimdall.proto

package heimdallv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Observation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BankSlot       uint64   `protobuf:"varint,1,opt,name=bankSlot,proto3" json:"bankSlot,omitempty"`
	BankID         uint64   `protobuf:"varint,2,opt,name=bankID,proto3" json:"bankID,omitempty"`
	BankParentHash string   `protobuf:"bytes,3,opt,name=bankParentHash,proto3" json:"bankParentHash,omitempty"`
	FeePayer       string   `protobuf:"bytes,4,opt,name=feePayer,proto3" json:"feePayer,omitempty"`
	Signature      string   `protobuf:"bytes,5,opt,name=signature,proto3" json:"signature,omitempty"`
	Program        string   `protobuf:"bytes,6,opt,name=program,proto3" json:"program,omitempty"`
	Timings        *Timings `protobuf:"bytes,7,opt,name=timings,proto3" json:"timings,omitempty"`
}

func (x *Observation) Reset() {
	*x = Observation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_heimdall_v1_heimdall_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Observation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Observation) ProtoMessage() {}

func (x *Observation) ProtoReflect() protoreflect.Message {
	mi := &file_proto_heimdall_v1_heimdall_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Observation.ProtoReflect.Descriptor instead.
func (*Observation) Descriptor() ([]byte, []int) {
	return file_proto_heimdall_v1_heimdall_proto_rawDescGZIP(), []int{0}
}

func (x *Observation) GetBankSlot() uint64 {
	if x != nil {
		return x.BankSlot
	}
	return 0
}

func (x *Observation) GetBankID() uint64 {
	if x != nil {
		return x.BankID
	}
	return 0
}

func (x *Observation) GetBankParentHash() string {
	if x != nil {
		return x.BankParentHash
	}
	return ""
}

func (x *Observation) GetFeePayer() string {
	if x != nil {
		return x.FeePayer
	}
	return ""
}

func (x *Observation) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *Observation) GetProgram() string {
	if x != nil {
		return x.Program
	}
	return ""
}

func (x *Observation) GetTimings() *Timings {
	if x != nil {
		return x.Timings
	}
	return nil
}

type Timings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SerializeUs                      uint64 `protobuf:"varint,1,opt,name=serialize_us,json=serializeUs,proto3" json:"serialize_us,omitempty"`
	CreateVmUs                       uint64 `protobuf:"varint,2,opt,name=create_vm_us,json=createVmUs,proto3" json:"create_vm_us,omitempty"`
	ExecuteUs                        uint64 `protobuf:"varint,3,opt,name=execute_us,json=executeUs,proto3" json:"execute_us,omitempty"`
	DeserializeUs                    uint64 `protobuf:"varint,4,opt,name=deserialize_us,json=deserializeUs,proto3" json:"deserialize_us,omitempty"`
	GetOrCreateExecutorUs            uint64 `protobuf:"varint,5,opt,name=get_or_create_executor_us,json=getOrCreateExecutorUs,proto3" json:"get_or_create_executor_us,omitempty"`
	ChangedAccountCount              uint64 `protobuf:"varint,6,opt,name=changed_account_count,json=changedAccountCount,proto3" json:"changed_account_count,omitempty"`
	TotalAccountCount                uint64 `protobuf:"varint,7,opt,name=total_account_count,json=totalAccountCount,proto3" json:"total_account_count,omitempty"`
	TotalDataSize                    uint64 `protobuf:"varint,8,opt,name=total_data_size,json=totalDataSize,proto3" json:"total_data_size,omitempty"`
	DataSizeChanged                  uint64 `protobuf:"varint,9,opt,name=data_size_changed,json=dataSizeChanged,proto3" json:"data_size_changed,omitempty"`
	CreateExecutorRegisterSyscallsUs uint64 `protobuf:"varint,10,opt,name=create_executor_register_syscalls_us,json=createExecutorRegisterSyscallsUs,proto3" json:"create_executor_register_syscalls_us,omitempty"`
	CreateExecutorLoadElfUs          uint64 `protobuf:"varint,11,opt,name=create_executor_load_elf_us,json=createExecutorLoadElfUs,proto3" json:"create_executor_load_elf_us,omitempty"`
	CreateExecutorVerifyCodeUs       uint64 `protobuf:"varint,12,opt,name=create_executor_verify_code_us,json=createExecutorVerifyCodeUs,proto3" json:"create_executor_verify_code_us,omitempty"`
	CreateExecutorJitCompileUs       uint64 `protobuf:"varint,13,opt,name=create_executor_jit_compile_us,json=createExecutorJitCompileUs,proto3" json:"create_executor_jit_compile_us,omitempty"`
}

func (x *Timings) Reset() {
	*x = Timings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_heimdall_v1_heimdall_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Timings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Timings) ProtoMessage() {}

func (x *Timings) ProtoReflect() protoreflect.Message {
	mi := &file_proto_heimdall_v1_heimdall_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Timings.ProtoReflect.Descriptor instead.
func (*Timings) Descriptor() ([]byte, []int) {
	return file_proto_heimdall_v1_heimdall_proto_rawDescGZIP(), []int{1}
}

func (x *Timings) GetSerializeUs() uint64 {
	if x != nil {
		return x.SerializeUs
	}
	return 0
}

func (x *Timings) GetCreateVmUs() uint64 {
	if x != nil {
		return x.CreateVmUs
	}
	return 0
}

func (x *Timings) GetExecuteUs() uint64 {
	if x != nil {
		return x.ExecuteUs
	}
	return 0
}

func (x *Timings) GetDeserializeUs() uint64 {
	if x != nil {
		return x.DeserializeUs
	}
	return 0
}

func (x *Timings) GetGetOrCreateExecutorUs() uint64 {
	if x != nil {
		return x.GetOrCreateExecutorUs
	}
	return 0
}

func (x *Timings) GetChangedAccountCount() uint64 {
	if x != nil {
		return x.ChangedAccountCount
	}
	return 0
}

func (x *Timings) GetTotalAccountCount() uint64 {
	if x != nil {
		return x.TotalAccountCount
	}
	return 0
}

func (x *Timings) GetTotalDataSize() uint64 {
	if x != nil {
		return x.TotalDataSize
	}
	return 0
}

func (x *Timings) GetDataSizeChanged() uint64 {
	if x != nil {
		return x.DataSizeChanged
	}
	return 0
}

func (x *Timings) GetCreateExecutorRegisterSyscallsUs() uint64 {
	if x != nil {
		return x.CreateExecutorRegisterSyscallsUs
	}
	return 0
}

func (x *Timings) GetCreateExecutorLoadElfUs() uint64 {
	if x != nil {
		return x.CreateExecutorLoadElfUs
	}
	return 0
}

func (x *Timings) GetCreateExecutorVerifyCodeUs() uint64 {
	if x != nil {
		return x.CreateExecutorVerifyCodeUs
	}
	return 0
}

func (x *Timings) GetCreateExecutorJitCompileUs() uint64 {
	if x != nil {
		return x.CreateExecutorJitCompileUs
	}
	return 0
}

var File_proto_heimdall_v1_heimdall_proto protoreflect.FileDescriptor

var file_proto_heimdall_v1_heimdall_proto_rawDesc = []byte{
	0x0a, 0x20, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x68, 0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c,
	0x2f, 0x76, 0x31, 0x2f, 0x68, 0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x08, 0x68, 0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c, 0x22, 0xea, 0x01, 0x0a,
	0x0b, 0x4f, 0x62, 0x73, 0x65, 0x72, 0x76, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08,
	0x62, 0x61, 0x6e, 0x6b, 0x53, 0x6c, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x62, 0x61, 0x6e, 0x6b, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x61, 0x6e, 0x6b,
	0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x62, 0x61, 0x6e, 0x6b, 0x49, 0x44,
	0x12, 0x26, 0x0a, 0x0e, 0x62, 0x61, 0x6e, 0x6b, 0x50, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x48, 0x61,
	0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x61, 0x6e, 0x6b, 0x50, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x50,
	0x61, 0x79, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x65, 0x65, 0x50,
	0x61, 0x79, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x2b, 0x0a, 0x07,
	0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x68, 0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c, 0x2e, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x07, 0x74, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x73, 0x22, 0x9c, 0x05, 0x0a, 0x07, 0x54, 0x69,
	0x6d, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69,
	0x7a, 0x65, 0x5f, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x55, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x5f, 0x76, 0x6d, 0x5f, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6d, 0x55, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09,
	0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x55, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x64, 0x65, 0x73,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x5f, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0d, 0x64, 0x65, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x55, 0x73,
	0x12, 0x38, 0x0a, 0x19, 0x67, 0x65, 0x74, 0x5f, 0x6f, 0x72, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x5f, 0x75, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x15, 0x67, 0x65, 0x74, 0x4f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x55, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x63, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x64, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x13, 0x63, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x64, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e,
	0x0a, 0x13, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x26,
	0x0a, 0x0f, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x73,
	0x69, 0x7a, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x0f, 0x64, 0x61, 0x74, 0x61, 0x53, 0x69, 0x7a, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x64, 0x12, 0x4e, 0x0a, 0x24, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x73,
	0x79, 0x73, 0x63, 0x61, 0x6c, 0x6c, 0x73, 0x5f, 0x75, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x20, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x79, 0x73, 0x63, 0x61, 0x6c, 0x6c, 0x73,
	0x55, 0x73, 0x12, 0x3c, 0x0a, 0x1b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x78, 0x65,
	0x63, 0x75, 0x74, 0x6f, 0x72, 0x5f, 0x6c, 0x6f, 0x61, 0x64, 0x5f, 0x65, 0x6c, 0x66, 0x5f, 0x75,
	0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x04, 0x52, 0x17, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x45,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x4c, 0x6f, 0x61, 0x64, 0x45, 0x6c, 0x66, 0x55, 0x73,
	0x12, 0x42, 0x0a, 0x1e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x6f, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x69, 0x66, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f,
	0x75, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x55, 0x73, 0x12, 0x42, 0x0a, 0x1e, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x65,
	0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x5f, 0x6a, 0x69, 0x74, 0x5f, 0x63, 0x6f, 0x6d, 0x70,
	0x69, 0x6c, 0x65, 0x5f, 0x75, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x1a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x6f, 0x72, 0x4a, 0x69, 0x74, 0x43,
	0x6f, 0x6d, 0x70, 0x69, 0x6c, 0x65, 0x55, 0x73, 0x42, 0x35, 0x5a, 0x33, 0x67, 0x6f, 0x2e, 0x66,
	0x69, 0x72, 0x65, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x2e, 0x69, 0x6f, 0x2f, 0x72, 0x61, 0x64,
	0x69, 0x61, 0x6e, 0x63, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x68, 0x65, 0x69, 0x6d,
	0x64, 0x61, 0x6c, 0x6c, 0x3b, 0x68, 0x65, 0x69, 0x6d, 0x64, 0x61, 0x6c, 0x6c, 0x76, 0x31, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_heimdall_v1_heimdall_proto_rawDescOnce sync.Once
	file_proto_heimdall_v1_heimdall_proto_rawDescData = file_proto_heimdall_v1_heimdall_proto_rawDesc
)

func file_proto_heimdall_v1_heimdall_proto_rawDescGZIP() []byte {
	file_proto_heimdall_v1_heimdall_proto_rawDescOnce.Do(func() {
		file_proto_heimdall_v1_heimdall_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_heimdall_v1_heimdall_proto_rawDescData)
	})
	return file_proto_heimdall_v1_heimdall_proto_rawDescData
}

var file_proto_heimdall_v1_heimdall_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_proto_heimdall_v1_heimdall_proto_goTypes = []interface{}{
	(*Observation)(nil), // 0: heimdall.Observation
	(*Timings)(nil),     // 1: heimdall.Timings
}
var file_proto_heimdall_v1_heimdall_proto_depIdxs = []int32{
	1, // 0: heimdall.Observation.timings:type_name -> heimdall.Timings
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_heimdall_v1_heimdall_proto_init() }
func file_proto_heimdall_v1_heimdall_proto_init() {
	if File_proto_heimdall_v1_heimdall_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_heimdall_v1_heimdall_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Observation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_heimdall_v1_heimdall_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Timings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_heimdall_v1_heimdall_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_heimdall_v1_heimdall_proto_goTypes,
		DependencyIndexes: file_proto_heimdall_v1_heimdall_proto_depIdxs,
		MessageInfos:      file_proto_heimdall_v1_heimdall_proto_msgTypes,
	}.Build()
	File_proto_heimdall_v1_heimdall_proto = out.File
	file_proto_heimdall_v1_heimdall_proto_rawDesc = nil
	file_proto_heimdall_v1_heimdall_proto_goTypes = nil
	file_proto_heimdall_v1_heimdall_proto_depIdxs = nil
}
