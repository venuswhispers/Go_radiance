// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: proto/env/v1/env.proto

package envv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Env struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Nodes []*RPCNode `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	Kafka *Kafka     `protobuf:"bytes,2,opt,name=kafka,proto3" json:"kafka,omitempty"`
}

func (x *Env) Reset() {
	*x = Env{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_env_v1_env_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Env) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Env) ProtoMessage() {}

func (x *Env) ProtoReflect() protoreflect.Message {
	mi := &file_proto_env_v1_env_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Env.ProtoReflect.Descriptor instead.
func (*Env) Descriptor() ([]byte, []int) {
	return file_proto_env_v1_env_proto_rawDescGZIP(), []int{0}
}

func (x *Env) GetNodes() []*RPCNode {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *Env) GetKafka() *Kafka {
	if x != nil {
		return x.Kafka
	}
	return nil
}

type RPCNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Http string   `protobuf:"bytes,2,opt,name=http,proto3" json:"http,omitempty"`
	Ws   string   `protobuf:"bytes,3,opt,name=ws,proto3" json:"ws,omitempty"`
	Tag  []string `protobuf:"bytes,4,rep,name=tag,proto3" json:"tag,omitempty"`
}

func (x *RPCNode) Reset() {
	*x = RPCNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_env_v1_env_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPCNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPCNode) ProtoMessage() {}

func (x *RPCNode) ProtoReflect() protoreflect.Message {
	mi := &file_proto_env_v1_env_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPCNode.ProtoReflect.Descriptor instead.
func (*RPCNode) Descriptor() ([]byte, []int) {
	return file_proto_env_v1_env_proto_rawDescGZIP(), []int{1}
}

func (x *RPCNode) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *RPCNode) GetHttp() string {
	if x != nil {
		return x.Http
	}
	return ""
}

func (x *RPCNode) GetWs() string {
	if x != nil {
		return x.Ws
	}
	return ""
}

func (x *RPCNode) GetTag() []string {
	if x != nil {
		return x.Tag
	}
	return nil
}

type Kafka struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// List of seed brokers.
	Brokers []string `protobuf:"bytes,1,rep,name=brokers,proto3" json:"brokers,omitempty"`
	// Topic prefix (dot notation). The topic name is the prefix + application-specific name.
	TopicPrefix string `protobuf:"bytes,2,opt,name=topic_prefix,json=topicPrefix,proto3" json:"topic_prefix,omitempty"`
	// Authentication method.
	//
	// Types that are assignable to Auth:
	//	*Kafka_NoAuth
	//	*Kafka_SaslAuth
	Auth isKafka_Auth `protobuf_oneof:"auth"`
	// Encryption
	//
	// Types that are assignable to Encryption:
	//	*Kafka_TlsEncryption
	Encryption isKafka_Encryption `protobuf_oneof:"encryption"`
}

func (x *Kafka) Reset() {
	*x = Kafka{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_env_v1_env_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Kafka) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Kafka) ProtoMessage() {}

func (x *Kafka) ProtoReflect() protoreflect.Message {
	mi := &file_proto_env_v1_env_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Kafka.ProtoReflect.Descriptor instead.
func (*Kafka) Descriptor() ([]byte, []int) {
	return file_proto_env_v1_env_proto_rawDescGZIP(), []int{2}
}

func (x *Kafka) GetBrokers() []string {
	if x != nil {
		return x.Brokers
	}
	return nil
}

func (x *Kafka) GetTopicPrefix() string {
	if x != nil {
		return x.TopicPrefix
	}
	return ""
}

func (m *Kafka) GetAuth() isKafka_Auth {
	if m != nil {
		return m.Auth
	}
	return nil
}

func (x *Kafka) GetNoAuth() *Kafka_KafkaNoAuth {
	if x, ok := x.GetAuth().(*Kafka_NoAuth); ok {
		return x.NoAuth
	}
	return nil
}

func (x *Kafka) GetSaslAuth() *Kafka_KafkaSASLAuth {
	if x, ok := x.GetAuth().(*Kafka_SaslAuth); ok {
		return x.SaslAuth
	}
	return nil
}

func (m *Kafka) GetEncryption() isKafka_Encryption {
	if m != nil {
		return m.Encryption
	}
	return nil
}

func (x *Kafka) GetTlsEncryption() *Kafka_KafkaTLSEncryption {
	if x, ok := x.GetEncryption().(*Kafka_TlsEncryption); ok {
		return x.TlsEncryption
	}
	return nil
}

type isKafka_Auth interface {
	isKafka_Auth()
}

type Kafka_NoAuth struct {
	// No authentication.
	NoAuth *Kafka_KafkaNoAuth `protobuf:"bytes,3,opt,name=no_auth,json=noAuth,proto3,oneof"`
}

type Kafka_SaslAuth struct {
	// SASL authentication.
	SaslAuth *Kafka_KafkaSASLAuth `protobuf:"bytes,4,opt,name=sasl_auth,json=saslAuth,proto3,oneof"`
}

func (*Kafka_NoAuth) isKafka_Auth() {}

func (*Kafka_SaslAuth) isKafka_Auth() {}

type isKafka_Encryption interface {
	isKafka_Encryption()
}

type Kafka_TlsEncryption struct {
	// TLS encryption.
	TlsEncryption *Kafka_KafkaTLSEncryption `protobuf:"bytes,6,opt,name=tls_encryption,json=tlsEncryption,proto3,oneof"`
}

func (*Kafka_TlsEncryption) isKafka_Encryption() {}

// SASL SCRAM-SHA-256 authentication.
type Kafka_KafkaSASLAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *Kafka_KafkaSASLAuth) Reset() {
	*x = Kafka_KafkaSASLAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_env_v1_env_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Kafka_KafkaSASLAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Kafka_KafkaSASLAuth) ProtoMessage() {}

func (x *Kafka_KafkaSASLAuth) ProtoReflect() protoreflect.Message {
	mi := &file_proto_env_v1_env_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Kafka_KafkaSASLAuth.ProtoReflect.Descriptor instead.
func (*Kafka_KafkaSASLAuth) Descriptor() ([]byte, []int) {
	return file_proto_env_v1_env_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Kafka_KafkaSASLAuth) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Kafka_KafkaSASLAuth) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type Kafka_KafkaNoAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Kafka_KafkaNoAuth) Reset() {
	*x = Kafka_KafkaNoAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_env_v1_env_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Kafka_KafkaNoAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Kafka_KafkaNoAuth) ProtoMessage() {}

func (x *Kafka_KafkaNoAuth) ProtoReflect() protoreflect.Message {
	mi := &file_proto_env_v1_env_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Kafka_KafkaNoAuth.ProtoReflect.Descriptor instead.
func (*Kafka_KafkaNoAuth) Descriptor() ([]byte, []int) {
	return file_proto_env_v1_env_proto_rawDescGZIP(), []int{2, 1}
}

// TLS encryption.
type Kafka_KafkaTLSEncryption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Kafka_KafkaTLSEncryption) Reset() {
	*x = Kafka_KafkaTLSEncryption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_env_v1_env_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Kafka_KafkaTLSEncryption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Kafka_KafkaTLSEncryption) ProtoMessage() {}

func (x *Kafka_KafkaTLSEncryption) ProtoReflect() protoreflect.Message {
	mi := &file_proto_env_v1_env_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Kafka_KafkaTLSEncryption.ProtoReflect.Descriptor instead.
func (*Kafka_KafkaTLSEncryption) Descriptor() ([]byte, []int) {
	return file_proto_env_v1_env_proto_rawDescGZIP(), []int{2, 2}
}

var File_proto_env_v1_env_proto protoreflect.FileDescriptor

var file_proto_env_v1_env_proto_rawDesc = []byte{
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x65, 0x6e, 0x76, 0x2f, 0x76, 0x31, 0x2f, 0x65,
	0x6e, 0x76, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x65, 0x6e, 0x76, 0x22, 0x4b, 0x0a,
	0x03, 0x45, 0x6e, 0x76, 0x12, 0x22, 0x0a, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x65, 0x6e, 0x76, 0x2e, 0x52, 0x50, 0x43, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x05, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x20, 0x0a, 0x05, 0x6b, 0x61, 0x66, 0x6b,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x65, 0x6e, 0x76, 0x2e, 0x4b, 0x61,
	0x66, 0x6b, 0x61, 0x52, 0x05, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x22, 0x53, 0x0a, 0x07, 0x52, 0x50,
	0x43, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x74, 0x74,
	0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x74, 0x74, 0x70, 0x12, 0x0e, 0x0a,
	0x02, 0x77, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x77, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x74, 0x61, 0x67, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61, 0x67, 0x22,
	0xfc, 0x02, 0x0a, 0x05, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x72, 0x6f,
	0x6b, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x62, 0x72, 0x6f, 0x6b,
	0x65, 0x72, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x5f, 0x70, 0x72, 0x65,
	0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x50, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x31, 0x0a, 0x07, 0x6e, 0x6f, 0x5f, 0x61, 0x75, 0x74,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x65, 0x6e, 0x76, 0x2e, 0x4b, 0x61,
	0x66, 0x6b, 0x61, 0x2e, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x4e, 0x6f, 0x41, 0x75, 0x74, 0x68, 0x48,
	0x00, 0x52, 0x06, 0x6e, 0x6f, 0x41, 0x75, 0x74, 0x68, 0x12, 0x37, 0x0a, 0x09, 0x73, 0x61, 0x73,
	0x6c, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x65,
	0x6e, 0x76, 0x2e, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x2e, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x53, 0x41,
	0x53, 0x4c, 0x41, 0x75, 0x74, 0x68, 0x48, 0x00, 0x52, 0x08, 0x73, 0x61, 0x73, 0x6c, 0x41, 0x75,
	0x74, 0x68, 0x12, 0x46, 0x0a, 0x0e, 0x74, 0x6c, 0x73, 0x5f, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x65, 0x6e, 0x76,
	0x2e, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x2e, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x54, 0x4c, 0x53, 0x45,
	0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x01, 0x52, 0x0d, 0x74, 0x6c, 0x73,
	0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x47, 0x0a, 0x0d, 0x4b, 0x61,
	0x66, 0x6b, 0x61, 0x53, 0x41, 0x53, 0x4c, 0x41, 0x75, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x1a, 0x0d, 0x0a, 0x0b, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x4e, 0x6f, 0x41, 0x75,
	0x74, 0x68, 0x1a, 0x14, 0x0a, 0x12, 0x4b, 0x61, 0x66, 0x6b, 0x61, 0x54, 0x4c, 0x53, 0x45, 0x6e,
	0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x61, 0x75, 0x74, 0x68,
	0x42, 0x0c, 0x0a, 0x0a, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x2d,
	0x5a, 0x2b, 0x67, 0x6f, 0x2e, 0x66, 0x69, 0x72, 0x65, 0x64, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x2e,
	0x69, 0x6f, 0x2f, 0x72, 0x61, 0x64, 0x69, 0x61, 0x6e, 0x63, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x2f, 0x65, 0x6e, 0x76, 0x76, 0x31, 0x3b, 0x65, 0x6e, 0x76, 0x76, 0x31, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_env_v1_env_proto_rawDescOnce sync.Once
	file_proto_env_v1_env_proto_rawDescData = file_proto_env_v1_env_proto_rawDesc
)

func file_proto_env_v1_env_proto_rawDescGZIP() []byte {
	file_proto_env_v1_env_proto_rawDescOnce.Do(func() {
		file_proto_env_v1_env_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_env_v1_env_proto_rawDescData)
	})
	return file_proto_env_v1_env_proto_rawDescData
}

var file_proto_env_v1_env_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_proto_env_v1_env_proto_goTypes = []interface{}{
	(*Env)(nil),                      // 0: env.Env
	(*RPCNode)(nil),                  // 1: env.RPCNode
	(*Kafka)(nil),                    // 2: env.Kafka
	(*Kafka_KafkaSASLAuth)(nil),      // 3: env.Kafka.KafkaSASLAuth
	(*Kafka_KafkaNoAuth)(nil),        // 4: env.Kafka.KafkaNoAuth
	(*Kafka_KafkaTLSEncryption)(nil), // 5: env.Kafka.KafkaTLSEncryption
}
var file_proto_env_v1_env_proto_depIdxs = []int32{
	1, // 0: env.Env.nodes:type_name -> env.RPCNode
	2, // 1: env.Env.kafka:type_name -> env.Kafka
	4, // 2: env.Kafka.no_auth:type_name -> env.Kafka.KafkaNoAuth
	3, // 3: env.Kafka.sasl_auth:type_name -> env.Kafka.KafkaSASLAuth
	5, // 4: env.Kafka.tls_encryption:type_name -> env.Kafka.KafkaTLSEncryption
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_proto_env_v1_env_proto_init() }
func file_proto_env_v1_env_proto_init() {
	if File_proto_env_v1_env_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_env_v1_env_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Env); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_env_v1_env_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPCNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_env_v1_env_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Kafka); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_env_v1_env_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Kafka_KafkaSASLAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_env_v1_env_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Kafka_KafkaNoAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_env_v1_env_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Kafka_KafkaTLSEncryption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_env_v1_env_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Kafka_NoAuth)(nil),
		(*Kafka_SaslAuth)(nil),
		(*Kafka_TlsEncryption)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_env_v1_env_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_env_v1_env_proto_goTypes,
		DependencyIndexes: file_proto_env_v1_env_proto_depIdxs,
		MessageInfos:      file_proto_env_v1_env_proto_msgTypes,
	}.Build()
	File_proto_env_v1_env_proto = out.File
	file_proto_env_v1_env_proto_rawDesc = nil
	file_proto_env_v1_env_proto_goTypes = nil
	file_proto_env_v1_env_proto_depIdxs = nil
}
